<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Cosmic Chakra Tracker with Astrology</title>
  <style>
    body { background: #0d0c1d; color: #f4f4f8; font-family: 'Segoe UI', sans-serif; padding: 20px; transition: background 0.5s, color 0.5s; }
    .tracker, .profile { max-width: 600px; margin: auto; }
    select, textarea, input, button { width: 100%; margin-top: 15px; padding: 10px; border-radius: 5px; border: none; }
    button { background: #6c63ff; color: #fff; cursor: pointer; }
    .log, .tasks, .progress, .reward, .export, .astrology { margin-top: 30px; }
    .task, .reward-badge, .astro-box, .flower { background: #1e1e38; padding: 10px; border-radius: 5px; margin-top: 10px; text-align: center; }
    .hidden { display: none; }
    iframe { width: 100%; height: 200px; border-radius: 10px; margin-top: 10px; }
    img.flower-img { width: 60px; height: auto; margin-top: 10px; }
  </style>
</head>
<body>
  <button onclick="toggleTheme()">Toggle Theme</button>

  <div class="profile" id="profileSetup">
    <h2>User Profile Setup</h2>
    <input type="text" id="name" placeholder="Your Name">
    <input type="date" id="birthdate">
    <input type="text" id="birthplace" placeholder="Place of Birth">
    <textarea id="lifeGoals" placeholder="Describe your spiritual intentions and life goals..."></textarea>
    <button onclick="saveProfile()">Save Profile</button>
  </div>

  <div class="tracker hidden" id="tracker">
    <h2>Cosmic Chakra Energy Tracker</h2>
    <div class="astrology" id="astroChart"></div>
    <select id="chakra">
      <option>Root</option>
      <option>Sacral</option>
      <option>Solar Plexus</option>
      <option>Heart</option>
      <option>Throat</option>
      <option>Third Eye</option>
      <option>Crown</option>
    </select>
    <select id="mood">
      <option>Calm</option>
      <option>Energized</option>
      <option>Foggy</option>
      <option>Stuck</option>
      <option>Aligned</option>
    </select>
    <textarea id="notes" placeholder="Your reflections..."></textarea>
    <button onclick="logEntry()">Log Today's Energy</button>

    <div class="tasks" id="tasks"></div>
    <iframe id="guidedSession" src="" class="hidden"></iframe>
    <div class="log" id="log"></div>
    <div class="progress" id="progress"></div>
    <div class="reward" id="reward"></div>
    <div class="export">
      <button onclick="exportLog()">Export Log (JSON)</button>
    </div>
  </div>

  <script>
    let isDark = true;
    const flowerImages = {
      "Calm": "https://upload.wikimedia.org/wikipedia/commons/thumb/6/66/Lotus_flower_in_full_bloom.jpg/800px-Lotus_flower_in_full_bloom.jpg",
      "Energized": "https://upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Sunflower.jpg/800px-Sunflower.jpg",
      "Foggy": "https://upload.wikimedia.org/wikipedia/commons/thumb/a/aa/Moonflower.jpg/800px-Moonflower.jpg",
      "Stuck": "https://upload.wikimedia.org/wikipedia/commons/thumb/b/bb/Wilted_rose.jpg/800px-Wilted_rose.jpg",
      "Aligned": "https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Chakra_flower.jpg/800px-Chakra_flower.jpg"
    };

    function toggleTheme() {
      isDark = !isDark;
      document.body.style.background = isDark ? '#0d0c1d' : '#fff';
      document.body.style.color = isDark ? '#f4f4f8' : '#111';
    }

    function generateAstroProfile(date) {
      const birthYear = new Date(date).getFullYear();
      const signs = ['Sun: Leo', 'Moon: Cancer', 'Mercury: Gemini', 'Venus: Taurus', 'Mars: Aries'];
      const missions = 'You are a celestial guide meant to anchor balance and help others awaken their cosmic memory.';
      return `
        <div class="astro-box">
          <strong>Astrological Snapshot (${birthYear}):</strong><br>
          ${signs.join('<br>')}<br><br>
          <strong>Mission:</strong><br>${missions}
        </div>
      `;
    }

    function saveProfile() {
      const profile = {
        name: document.getElementById('name').value,
        birthdate: document.getElementById('birthdate').value,
        birthplace: document.getElementById('birthplace').value,
        lifeGoals: document.getElementById('lifeGoals').value
      };
      localStorage.setItem('userProfile', JSON.stringify(profile));
      document.getElementById('profileSetup').classList.add('hidden');
      document.getElementById('tracker').classList.remove('hidden');
      document.getElementById('astroChart').innerHTML = generateAstroProfile(profile.birthdate);
    }

    const moodSuggestions = {
      "Root": { mood: "Energized", task: "Grounding yoga + affirmations.", video: "https://www.youtube.com/embed/4pLUleLdwY4" },
      "Sacral": { mood: "Calm", task: "Visualization & sacral breathwork.", video: "https://www.youtube.com/embed/KTZqX9W4Lz0" },
      "Solar Plexus": { mood: "Aligned", task: "Power pose + intention journaling.", video: "https://www.youtube.com/embed/6nZKb2wtDLg" },
      "Heart": { mood: "Calm", task: "Loving-Kindness Meditation.", video: "https://www.youtube.com/embed/MN8p-VrnZyI" },
      "Throat": { mood: "Energized", task: "Chanting or voice journaling.", video: "https://www.youtube.com/embed/vpFobQtxpWI" },
      "Third Eye": { mood: "Aligned", task: "Visualization meditation.", video: "https://www.youtube.com/embed/tK1DePbKf20" },
      "Crown": { mood: "Calm", task: "Silent cosmic meditation.", video: "https://www.youtube.com/embed/y0wP1xqaMAY" }
    };

    function suggestMoodChange(currentChakra) {
      return moodSuggestions[currentChakra] || { mood: "Aligned", task: "Reflect silently.", video: "" };
    }

    function logEntry() {
      const chakra = document.getElementById('chakra').value;
      const mood = document.getElementById('mood').value;
      const notes = document.getElementById('notes').value;
      const entry = {
        date: new Date().toLocaleDateString(),
        chakra, mood, notes,
        timestamp: new Date().toISOString()
      };
      let logs = JSON.parse(localStorage.getItem('chakraLogs') || '[]');
      logs.push(entry);
      localStorage.setItem('chakraLogs', JSON.stringify(logs));
      displayLog();

      const suggestion = suggestMoodChange(chakra);
      const flower = flowerImages[mood] || flowerImages['Aligned'];

      document.getElementById('tasks').innerHTML = `
        <div class="task">
          <strong>Suggested Mood Shift:</strong> ${suggestion.mood}<br>
          <strong>Today's Task:</strong> ${suggestion.task}<br>
          <img src="${flower}" alt="Mood Flower" class="flower-img">
        </div>
      `;

      const video = document.getElementById('guidedSession');
      video.src = suggestion.video;
      video.classList.remove('hidden');

      updateProgress();
      alert('Entry logged! Complete your task and explore your video session.');
    }

    function displayLog() {
      const logs = JSON.parse(localStorage.getItem('chakraLogs') || '[]');
      document.getElementById('log').innerHTML = logs.map(log => `
        <div><strong>${log.date}</strong>: ${log.chakra}, ${log.mood}<br>${log.notes}</div>
      `).join('');
    }

    function updateProgress() {
      const logs = JSON.parse(localStorage.getItem('chakraLogs') || '[]');
      const rewardBox = document.getElementById('reward');
      const eligibleLogs = logs.filter(log => {
        const oneWeekAgo = new Date();
        oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);
        return new Date(log.timestamp) <= oneWeekAgo;
      });

      document.getElementById('progress').innerHTML = `<strong>Total Entries:</strong> ${logs.length} | <strong>Eligible for Reward:</strong> ${eligibleLogs.length}`;

      if (eligibleLogs.length >= 7) {
        rewardBox.innerHTML = `
          <div class="reward-badge">
            <strong>Reward Unlocked!</strong><br>
            Youâ€™ve earned a Focus Reset Badge. Download your digital planner upgrade or join a bonus retreat session!
          </div>
        `;
      } else {
        rewardBox.innerHTML = `
          <div class="reward-badge">
            <em>7 unique week-long entries needed for next unlock. Keep tracking daily to grow your energy bank.</em>
          </div>
        `;
      }
    }

    function exportLog() {
      const logs = localStorage.getItem('chakraLogs');
      const blob = new Blob([logs], { type: 'application/json' });
      const url = URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = 'chakra_journal.json';
      a.click();
    }

    if (localStorage.getItem('userProfile')) {
      const profile = JSON.parse(localStorage.getItem('userProfile'));
      document.getElementById('profileSetup').classList.add('hidden');
      document.getElementById('tracker').classList.remove('hidden');
      document.getElementById('astroChart').innerHTML = generateAstroProfile(profile.birthdate);
      displayLog();
      updateProgress();
    }
  </script>
</body>
</html>
